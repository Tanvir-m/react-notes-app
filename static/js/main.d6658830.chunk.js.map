{"version":3,"sources":["components/ListItems/ListItems.jsx","components/UserInput/UserInput.jsx","components/notes/Notes.jsx","App.js","reportWebVitals.js","index.js","components/css/style.module.scss"],"names":["ListItems","props","listItems","useState","searchResult","setSearchResult","noteCard","filter","val","title","toLowerCase","includes","map","list","index","Col","md","span","offset","className","edit","text","type","defaultValue","onChange","e","textVal","target","value","name","id","cols","rows","Row","Button","style","btnRem","onClick","removeClickHandler","editClickHandler","saveClickHandler","orange","length","placeholder","searchInput","width","height","fixWidth","btnBtn","deleteAllClickHandler","UserInput","titleVal","setTitleVal","setTextVal","modal","setmodal","add","setAdd","orgText","titleInp","textInp","trim","addNoteHandler","alert","Notes","localStorage","getItem","JSON","parse","setListItems","useEffect","setItem","stringify","tit","tex","items","push","listIndex","window","confirm","splice","App","Container","fluid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oQA6GeA,EAvGG,SAACC,GAEf,IAAQC,EAAcD,EAAdC,UAER,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAWJ,EAAUK,QAAO,SAACC,GAC/B,MAAoB,KAAjBJ,GAEMI,EAAIC,MAAMC,cAAcC,SAASP,EAAaM,eAD5CF,OACL,KAGPI,KAAI,SAACC,EAAKC,GAAN,OACH,mCACI,eAACC,EAAA,EAAD,CAAiBC,GAAI,CAACC,KAAK,EAAGC,OAAO,GAAIC,UAAU,oBAAnD,UACKN,EAAKO,MACF,qCACI,6BAAI,4BAAIP,EAAKJ,UACb,mBAAGU,UAAU,OAAb,SAAqBN,EAAKQ,WAIhCR,EAAKO,MACH,qCACI,uBACIE,KAAK,OACLC,aAAcV,EAAKJ,MACnBe,SAAU,SAACC,GACP,IAAMC,EAAUD,EAAEE,OAAOC,MACzBf,EAAKJ,MAAQiB,KANzB,IAOc,uBAAM,uBAChB,0BAAUG,KAAK,GAAGC,GAAG,GAAGC,KAAK,KAAKC,KAAK,IACtCT,aAAcV,EAAKQ,KACnBG,SAAU,SAACC,GACR,IAAMC,EAAUD,EAAEE,OAAOC,MACzBf,EAAKQ,KAAOK,QAKxB,eAACO,EAAA,EAAD,WACI,cAAClB,EAAA,EAAD,UAAK,eAACmB,EAAA,EAAD,CACLf,UAAS,UAAKgB,IAAMC,OAAX,SACTC,QAAS,kBAAIpC,EAAMqC,mBAAmBxB,IAFjC,UAGJ,cAAC,IAAD,IAHI,cAKL,eAACC,EAAA,EAAD,WACKF,EAAKO,MACF,eAACc,EAAA,EAAD,CACAf,UAAS,UAAKgB,IAAMC,OAAX,SACTC,QAAS,kBAAIpC,EAAMsC,iBAAiBzB,IAFpC,UAGC,cAAC,IAAD,IAHD,WAMFD,EAAKO,MACH,eAACc,EAAA,EAAD,CACAf,UAAS,UAAKgB,IAAMC,OAAX,SACTC,QAAS,kBAAIpC,EAAMuC,iBAAiB3B,EAAKJ,MAAMI,EAAKQ,KAAKP,IAFzD,UAGC,cAAC,IAAD,IAHD,kBAzCNA,QAuDlB,OACI,qCAGI,eAACmB,EAAA,EAAD,CAAKd,UAAS,UAAKgB,IAAMM,OAAX,QAAd,UACI,cAACR,EAAA,EAAD,UACC/B,EAAUwC,OAAS,GAChB,mCACI,uBACApB,KAAK,OACLqB,YAAY,cACZxB,UAAWgB,IAAMS,YACjBT,MAAO,CAACU,MAAM,QAASC,OAAO,QAC9BtB,SAAU,SAACC,GACPpB,EAAgBoB,EAAEE,OAAOC,cAOrC,cAACK,EAAA,EAAD,CAAKd,UAAS,WAAMgB,IAAMY,UAA1B,SACKzC,OAKT,eAAC4B,EAAA,EAAD,CACIf,UAAS,UAAKgB,IAAMa,OAAX,SACTX,QAASpC,EAAMgD,sBAFnB,UAE0C,cAAC,IAAD,IAF1C,qB,gBCEGC,EAlGG,SAACjD,GAEf,MAAgCE,mBAAS,IAAzC,mBAAOgD,EAAP,KAAiBC,EAAjB,KACA,EAA8BjD,mBAAS,IAAvC,mBAAOuB,EAAP,KAAgB2B,EAAhB,KACA,EAA0BlD,oBAAS,GAAnC,mBAAOmD,EAAP,KAAcC,EAAd,KACA,EAAsBpD,oBAAS,GAA/B,mBAAOqD,EAAP,KAAYC,EAAZ,KAiCA,OACI,qCACI,oBAAItC,UAAS,sBAAiBgB,IAAMuB,SAApC,6BAEA,iCACKF,GACG,mCACI,eAACtB,EAAA,EAAD,CACJf,UAAS,UAAKgB,IAAMa,OAAX,SACTX,QAnBU,WACtBkB,GAAS,GACTE,GAAO,IAeS,UAGH,cAAC,IAAD,IAHG,eASXH,GACG,mCACI,eAACrB,EAAA,EAAD,CAAKd,UAAS,eAAUgB,IAAMmB,OAA9B,UACA,oBAAInC,UAAS,UAAKgB,IAAMuB,QAAX,UAAb,4BACA,cAAC3C,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,uBACIM,KAAK,OACLH,UAAS,UAAKgB,IAAMwB,UACpBhB,YAAY,oBACZf,MAAOuB,EACP3B,SAzDK,SAACC,GAC1B2B,EAAY3B,EAAEE,OAAOC,YA0DT,cAACb,EAAA,EAAD,CAAKC,GAAI,GAAIG,UAAU,OAAvB,SACI,0BACIA,UAAS,UAAKgB,IAAMyB,SACpB/B,KAAK,GAAGC,GAAG,GAAGC,KAAK,MAAMC,KAAK,KAC9BW,YAAY,2BACZf,MAAOF,EACPF,SA7DQ,SAACC,GAC7B4B,EAAW5B,EAAEE,OAAOC,YA8DR,eAACK,EAAA,EAAD,WACI,cAAClB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACkB,EAAA,EAAD,CACIf,UAAS,UAAKgB,IAAMa,OAAX,SACTX,QA/DA,WACnBc,EAASU,QAAUnC,EAAQmC,OAEvBV,EAASU,QAAUnC,EAAQmC,SAChC5D,EAAM6D,eAAeX,EAAUzB,GAC/B2B,EAAW,IACXD,EAAY,IACZG,GAAS,GACTE,GAAO,IANPM,MAAM,4BA2DU,UAEkC,cAAC,IAAD,IAFlC,kBAKJ,cAAChD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACkB,EAAA,EAAD,CACIf,UAAS,UAAKgB,IAAMa,OAAX,SACTX,QAnDF,WACtBkB,GAAS,GACTE,GAAO,IA+Ca,UAEgC,cAAC,IAAD,IAFhC,2BCVbO,EAxED,WAEV,IAUA,EAAkC7D,mBATjB8D,aAAaC,QAAQ,aAGvBC,KAAKC,MAAMH,aAAaC,QAAQ,cAEhC,IAIf,mBAAOhE,EAAP,KAAkBmE,EAAlB,KA8CA,OAHAC,qBAAU,WACNL,aAAaM,QAAQ,YAAaJ,KAAKK,UAAUtE,MACnD,CAACA,IAEC,qCACI,cAAC,EAAD,CAAW4D,eA9CI,SAACW,EAAIC,GACxB,IAAMC,EAAK,YAAOzE,GAClByE,EAAMC,KAAK,CACPnE,MAAMgE,EACNpD,KAAKqD,EACLtD,MAAK,IAGTiD,EAAaM,MAuCT,cAAC,EAAD,CACIzE,UAAWA,EACXoC,mBAtCe,SAACuC,GACxB,GAAGC,OAAOC,QAAQ,sCAAsC,CACpD,IAAMJ,EAAK,YAAOzE,GAClByE,EAAMK,OAAOH,EAAW,GACxBR,EAAaM,KAmCTpC,iBA9Ba,SAACsC,GACtB,IAAMF,EAAK,YAAOzE,GAClByE,EAAME,GAAWzD,MAAO,EACxBiD,EAAaM,IA4BLnC,iBAzBa,SAACiC,EAAIpD,EAAKwD,GAC/B,IAAMF,EAAK,YAAOzE,GAClByE,EAAME,GAAWzD,MAAO,EACxBuD,EAAME,GAAWpE,MAAQgE,EACzBE,EAAME,GAAWxD,KAAOA,EACxBgD,EAAaM,IAqBL1B,sBAlBkB,WACvB6B,OAAOC,QAAQ,wDACdV,EAAa,W,cCpCVY,MAbf,WACE,OACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAChE,UAAS,UAAKgB,IAAMM,OAAX,QAA1B,SACE,qBAAKtB,UAAU,YAAf,SACE,cAAC+D,EAAA,EAAD,UACE,cAAC,EAAD,WCAKE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,sBAAsB,QAAU,uBAAuB,OAAS,sBAAsB,OAAS,sBAAsB,YAAc,2BAA2B,MAAQ,qBAAqB,SAAW,wBAAwB,SAAW,wBAAwB,QAAU,0B","file":"static/js/main.d6658830.chunk.js","sourcesContent":["import { Col, Row, Button } from \"react-bootstrap\"\r\nimport { RiDeleteBin4Fill, RiDeleteBinFill } from \"react-icons/ri\"\r\nimport { BiMessageAltEdit } from \"react-icons/bi\";\r\nimport { useState } from \"react\";\r\nimport style from '../css/style.module.scss'\r\n\r\nconst ListItems = (props) => {\r\n\r\n    const { listItems } = props;\r\n    \r\n    const [searchResult, setSearchResult] = useState('');\r\n\r\n    const noteCard = listItems.filter((val)=>{\r\n        if(searchResult === ''){\r\n            return val;\r\n        }else if(val.title.toLowerCase().includes(searchResult.toLowerCase())){\r\n            return val;\r\n        }\r\n    }).map((list,index)=>(\r\n        <>\r\n            <Col key={index} md={{span:5, offset:1}} className=\"bg-white p-4 mt-4\">\r\n                {list.edit && (\r\n                    <>\r\n                        <h4><b>{list.title}</b></h4>\r\n                        <p className=\"mt-3\">{list.text}</p>\r\n                    </>\r\n                )}\r\n\r\n                {!list.edit && (\r\n                    <>\r\n                        <input \r\n                            type=\"text\"\r\n                            defaultValue={list.title}\r\n                            onChange={(e)=>{\r\n                                const textVal = e.target.value;\r\n                                list.title = textVal;\r\n                            }} /> <br /><br />\r\n                        <textarea name=\"\" id=\"\" cols=\"50\" rows=\"3\"\r\n                         defaultValue={list.text}\r\n                         onChange={(e)=>{\r\n                            const textVal = e.target.value;\r\n                            list.text = textVal;\r\n                        }}></textarea>\r\n                    </>\r\n                )}\r\n\r\n                <Row>\r\n                    <Col><Button \r\n                    className={`${style.btnRem} mt-3`}\r\n                    onClick={()=>props.removeClickHandler(index)}\r\n                    ><RiDeleteBin4Fill />Remove</Button></Col>\r\n\r\n                    <Col>\r\n                        {list.edit && (\r\n                            <Button \r\n                            className={`${style.btnRem} mt-3`}\r\n                            onClick={()=>props.editClickHandler(index)}\r\n                            ><BiMessageAltEdit />Edit</Button>\r\n                        )}\r\n\r\n                        {!list.edit && (\r\n                            <Button \r\n                            className={`${style.btnRem} mt-3`}\r\n                            onClick={()=>props.saveClickHandler(list.title,list.text,index)}\r\n                            ><BiMessageAltEdit />Save</Button>\r\n                        )}      \r\n                        \r\n                    </Col>\r\n                </Row>\r\n                \r\n                \r\n            </Col>\r\n        </>\r\n    )         \r\n    )\r\n    return (\r\n        <>\r\n                \r\n\r\n            <Row className={`${style.orange} p-5`}>\r\n                <Row>\r\n                {listItems.length > 1 && (\r\n                    <>\r\n                        <input \r\n                        type=\"text\"\r\n                        placeholder=\"Search note\"\r\n                        className={style.searchInput}\r\n                        style={{width:'300px', height:'50px'}}\r\n                        onChange={(e)=>{\r\n                            setSearchResult(e.target.value);\r\n                        }}\r\n                      />\r\n                    </>\r\n                )}\r\n                </Row>\r\n                \r\n                <Row className={` ${style.fixWidth}`}>\r\n                    {noteCard}\r\n                </Row>\r\n                \r\n                \r\n            </Row>\r\n            <Button \r\n                className={`${style.btnBtn} my-5`}\r\n                onClick={props.deleteAllClickHandler}><RiDeleteBinFill />Delete All </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListItems\r\n","import { useState } from 'react';\r\nimport {Row, Col, Button} from 'react-bootstrap';\r\nimport {BsFillPlusCircleFill} from 'react-icons/bs';\r\nimport {AiFillCloseCircle} from 'react-icons/ai';\r\nimport style from '../css/style.module.scss'\r\n\r\nconst UserInput = (props) => {\r\n\r\n    const [titleVal, setTitleVal] = useState('');\r\n    const [textVal, setTextVal] = useState('');\r\n    const [modal, setmodal] = useState(false);\r\n    const [add, setAdd] = useState(true);\r\n\r\n    const titleOnChangeHandler = (e)=>{\r\n        setTitleVal(e.target.value);\r\n    }\r\n\r\n    const textAreaOnChangeHandler = (e)=>{\r\n        setTextVal(e.target.value);\r\n    }\r\n\r\n    const addNoteClickHandler = ()=>{\r\n        if(!(titleVal.trim() && textVal.trim())){\r\n            alert('Please fill both inputs');\r\n        }else if(titleVal.trim() && textVal.trim()){\r\n            props.addNoteHandler(titleVal, textVal);\r\n            setTextVal('');\r\n            setTitleVal('');\r\n            setmodal(false);\r\n            setAdd(true);\r\n        }\r\n        \r\n    }\r\n\r\n    const modalClickHandler = ()=>{\r\n        setmodal(true);\r\n        setAdd(false);\r\n    }\r\n\r\n    const closeClickHandler = ()=>{\r\n        setmodal(false);\r\n        setAdd(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className={`text-center ${style.orgText}`}>Note Taking App</h1>\r\n\r\n            <center>\r\n                {add && (\r\n                    <>\r\n                        <Button \r\n                    className={`${style.btnBtn} my-3`}\r\n                    onClick = {modalClickHandler}\r\n                    ><BsFillPlusCircleFill /> Add </Button>\r\n                    </>\r\n                )}\r\n            </center>\r\n\r\n\r\n            {modal && (\r\n                <>\r\n                    <Row className={`pb-5 ${style.modal}`}>\r\n                    <h4 className={`${style.orgText} mt-3 `}>Add A New Note</h4>\r\n                    <Col md={10}>\r\n                        <input \r\n                            type=\"text\" \r\n                            className={`${style.titleInp}`}\r\n                            placeholder=\"Title Of the note\"\r\n                            value={titleVal}\r\n                            onChange={titleOnChangeHandler} />\r\n                    </Col>\r\n                    <Col md={10} className=\"mt-4\">\r\n                        <textarea \r\n                            className={`${style.textInp}`}\r\n                            name=\"\" id=\"\" cols=\"150\" rows=\"10\"\r\n                            placeholder=\"Write your note here....\"\r\n                            value={textVal}\r\n                            onChange={textAreaOnChangeHandler}></textarea>\r\n                    </Col>\r\n                    <Row>\r\n                        <Col md={2}>\r\n                            <Button \r\n                                className={`${style.btnBtn} my-4`}\r\n                                onClick={addNoteClickHandler}><BsFillPlusCircleFill /> Add Note </Button>\r\n                        </Col>\r\n\r\n                        <Col md={1}>\r\n                            <Button \r\n                                className={`${style.btnBtn} my-4`}\r\n                                onClick={closeClickHandler}><AiFillCloseCircle /> Close </Button>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                    \r\n                </Row>\r\n                \r\n                    </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserInput\r\n","\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport ListItems from '../ListItems/ListItems';\r\nimport UserInput from '../UserInput/UserInput';\r\n\r\nconst Notes = ()=>{\r\n\r\n    const getItemsFromLocalStorage = ()=>{\r\n        const list = localStorage.getItem('notes-app');\r\n\r\n        if(list){\r\n            return JSON.parse(localStorage.getItem('notes-app'))\r\n        }else{\r\n            return [];\r\n        }\r\n    }\r\n\r\n    const [listItems, setListItems] = useState(getItemsFromLocalStorage());\r\n\r\n    const addNoteHandler = (tit,tex)=>{\r\n        const items = [...listItems];\r\n        items.push({\r\n            title:tit,\r\n            text:tex,\r\n            edit:true\r\n        })\r\n\r\n        setListItems(items);\r\n    }\r\n\r\n    const removeClickHandler = (listIndex)=>{\r\n        if(window.confirm('Are you sure you want to remove it')){\r\n            const items = [...listItems];\r\n            items.splice(listIndex, 1);\r\n            setListItems(items);\r\n        }\r\n        \r\n    }\r\n\r\n    const editClickHandler = (listIndex)=>{\r\n        const items = [...listItems];\r\n        items[listIndex].edit = false;\r\n        setListItems(items);\r\n    }\r\n\r\n    const saveClickHandler = (tit,text,listIndex)=>{\r\n        const items = [...listItems];\r\n        items[listIndex].edit = true;\r\n        items[listIndex].title = tit;\r\n        items[listIndex].text = text;\r\n        setListItems(items);\r\n    }\r\n\r\n    const deleteAllClickHandler = ()=>{\r\n        if(window.confirm('Are you sure you want to delete all items from list')){\r\n            setListItems([]);\r\n        }\r\n    }\r\n    \r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem('notes-app', JSON.stringify(listItems));\r\n    },[listItems]);\r\n    return (\r\n        <>\r\n            <UserInput addNoteHandler={addNoteHandler} />\r\n            <ListItems\r\n                listItems={listItems}\r\n                removeClickHandler={removeClickHandler}\r\n                editClickHandler={editClickHandler}\r\n                saveClickHandler={saveClickHandler}\r\n                deleteAllClickHandler={deleteAllClickHandler}\r\n             />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notes;","\n// import './App.css';\nimport Notes from './components/notes/Notes';\nimport { Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport style from './components/css/style.module.scss';\n\nfunction App() {\n  return (\n    <Container fluid className={`${style.orange} p-5`}>\n      <div className=\"bg-white \">\n        <Container >\n          <Notes />\n        </Container>\n      </div>\n    </Container>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orange\":\"style_orange__3os9U\",\"orgText\":\"style_orgText__3Kp9R\",\"btnBtn\":\"style_btnBtn__16qS6\",\"btnRem\":\"style_btnRem__1axay\",\"searchInput\":\"style_searchInput__37V42\",\"modal\":\"style_modal__2tgwW\",\"fixWidth\":\"style_fixWidth__1ypfl\",\"titleInp\":\"style_titleInp__2AB1Y\",\"textInp\":\"style_textInp__2N5qN\"};"],"sourceRoot":""}